@using System.Web.Mvc
@using BELibrary.Entity
@model Subject
@{
    ViewBag.Title = ViewBag.Key + " " + ViewBag.Element;
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-sm-12">
        <div class="panel">
            <div class="panel-heading">
                <div class="panel-control">

                    <!--Nav tabs-->
                    <ul class="nav nav-tabs">
                        <li class="active"><a data-toggle="tab" href="#post" aria-expanded="true">Bài viết </a></li>
                        <li class=""><a data-toggle="tab" href="#content" aria-expanded="false">Nội dung <span class="badge badge-purple">1</span></a></li>
                    </ul>
                </div>
                <h3 class="panel-title">@ViewBag.Element</h3>
            </div>
            <div class="panel-body">

                <form id="form">
                    <div class="tab-content">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @if (ViewBag.isEdit)
                        {
                            <input type="hidden" value="true" name="isEdit" />
                            <input type="hidden" value="@Model.Id" name="Id" />
                        }
                        else
                        {
                            <input type="hidden" value="false" name="isEdit" />
                        }
                        <div id="post" class="tab-pane fade active in">
                            <div class="panel">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label class="control-label">Tiêu đề</label>
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required", @maxlength = 250 } })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="form-group">
                                                <label class="control-label">Ảnh đại diện</label>
                                                <div class="input-group date">
                                                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @required = "required", @maxlength = 250 } })
                                                    <span class="input-group-addon" onclick="ChooseImg()">
                                                        <i class="fa fa-upload fa-lg"></i>
                                                    </span>
                                                </div>
                                                @if (ViewBag.isEdit)
                                                {
                                                    <img class="img img-thumbnail" id="Img" src="@Model.Image" />
                                                }
                                                else
                                                {
                                                    <img class="img img-thumbnail" id="Img" src="" />
                                                }
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label class="control-label">Khóa học</label>
                                                @Html.DropDownList("CourseId", (SelectList)ViewBag.Courses, "---Select---", new { @class = "form-control", @required = "required" })
                                            </div>
                                        </div>
                                        @if (ViewBag.isEdit)
                                        {
                                            <div class="col-sm-2">
                                                <div class="form-group">
                                                    <label class="control-label">Số học sinh</label>
                                                    @Html.EditorFor(model => model.NumberStudent, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                                                </div>
                                            </div>
                                        }

                                        <div class="col-sm-2">
                                            <div class="form-group">
                                                <label class="control-label">Giới hạn số HS</label>
                                                @Html.EditorFor(model => model.MaxStudent, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-2 col-xs-3">
                                            <div class="form-group">
                                                <label class="control-label">Status</label>
                                                <div>
                                                    @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label class="control-label">Nội dung mô tả ngắn (max 300 Character)</label>
                                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "6", @required = "required", @maxlength = 300 })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-footer">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <a class="btn btn-default btn-icon icon-lg fa fa-arrow-left fa-lg" href="/admin/subject"></a>
                                        </div>
                                        <div class="col-sm-6">
                                            <button class="btn btn-success btn-labeled fa fa-send fa-lg btn-save" style="float: right;" type="submit">Save</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="content" class="tab-pane fade">
                            <div class="panel">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label class="control-label">Nội dung</label>
                                                <div ass="col-md-10">
                                                    @Html.TextAreaFor(model => model.Content, new { @id = "FullDescription", @class = "form-control", @rows = "200" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-footer">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <a class="btn btn-default btn-icon icon-lg fa fa-arrow-left fa-lg" href="/admin/subject"></a>
                                        </div>
                                        <div class="col-sm-6">
                                            <button class="btn btn-success btn-labeled fa fa-send fa-lg btn-save" style="float: right;" type="submit">Save</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            function init() {
                CKEDITOR.replace("FullDescription", {
                    height: 500
                });

                $("#Image").change(function () {
                    const imgSrc = $("input[name=Image]").val();
                    if (imgSrc !== "") {
                        $("#Img").attr("src", imgSrc);
                    }
                });
                $(".btn-save").click(function () {
                    const configs = [
                        {
                            "id": "Name",
                            "rq": true,
                            "maxLength": 250,
                            "name": "Tiêu đề"
                        },
                        {
                            "id": "Image",
                            "rq": true,
                            "maxLength": 250,
                            "name": "Ảnh đại diện"
                        },
                        {
                            "id": "Description",
                            "rq": true,
                            "maxLength": 500,
                            "name": "Mô tả ngắn"
                        },
                        {
                            "id": "Requirements",
                            "rq": true,
                            "maxLength": 500,
                            "name": "Yêu cầu"
                        }
                    ];

                    for (let i = 0; i < configs.length; i++) {
                        if (configs[i].rq) {
                            const selecter = $('#' + configs[i].id);
                            if (selecter.val() == "") {
                                $.niftyNoty({
                                    type: 'danger',
                                    icon: 'fa fa-minus',
                                    message: '<b>' + configs[i].name + '</b> không được trống',
                                    container: 'floating',
                                    timer: 3000
                                });
                                break;
                            }
                            if (selecter.val().length > configs[i].maxLength) {
                                $.niftyNoty({
                                    type: 'danger',
                                    icon: 'fa fa-minus',
                                    message: '<b>' + configs[i].name + ': ' + selecter.val().length + '</b> quá dài (Tiêu chuẩn: ' + configs[i].maxLength + ')',
                                    container: 'floating',
                                    timer: 3000
                                });
                                break;
                            }
                        }
                    }
                });
            }

            init();
        });

        function ChooseImg() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#Img").attr("src", fileUrl);
                $("#Image").val(fileUrl);
            }
            finder.popup();
        }

        $('#form')
            .submit(function (e) {
                e.preventDefault();
                $(':input[type="submit"]').prop('disabled', true);
                const content = CKEDITOR.instances['FullDescription'].getData();
                if (content.length <= 0) {
                    const mess = `Tab không được để trống`;
                    notify.push(mess, notify.EType.DANGER);
                    $(':input[type="submit"]').prop('disabled', false);
                    return;
                }
                const formData = new FormData(this);

                formData.set("Content", content);

                notify.loading();

                $.ajax({
                    url: '/admin/subject/CreateOrEdit',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.status) {
                            notify.push(response.mess, notify.EType.SUCCESS);
                            setTimeout(function () {
                                window.location.href = '/admin/subject';
                            }, 1000);
                        } else {
                            notify.push(response.mess, notify.EType.DANGER);
                            $(':input[type="submit"]').prop('disabled', false);
                        }
                    },
                    error: function () {
                        notify.done();
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            });
    </script>
}